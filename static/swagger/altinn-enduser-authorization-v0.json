{
  "openapi": "3.0.0",
  "info": {
    "title": "Authorization API",
    "version": "1.0.0",
    "description": "End-user Authorization API"
  },
  "servers": [
    {
      "url": "https://tt02.altinn.no",
      "description": "Test server"
    },
    {
      "url": "https://altinn.no",
      "description": "Production server"
    }
  ],
  "paths": {
    "/api/{who}/authorization/RoleDefinitions": {
      "get": {
        "tags": ["RoleDefinitions"],
        "description": "Gets all the general role and local role definitions.",
        "operationId": "getAuthorizationRoleDefinitions",
        "parameters": [
          {
            "$ref": "altinn-api-common.json#/components/parameters/language"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of all role definitions.",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_links": {
                      "$ref": "altinn-api-common.json#/components/schemas/hal-links-self"
                    },
                    "_embedded": {
                      "type": "object",
                      "properties": {
                        "roledefinitions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/RoleDefinition-GET"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["RoleDefinitions"],
        "description": "Attempts to create role type",
        "operationId": "postAuthorizationRoleDefinitions",
        "requestBody": {
          "description": "",
          "content": {
            "application/hal+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDefinition-POST"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "parameters": [
        {
          "$ref": "altinn-api-common.json#/components/parameters/who"
        }
      ]
    },
    "/api/{who}/authorization/RoleDefinitions/{roleTypeID}": {
      "get": {
        "tags": ["RoleDefinitions"],
        "description": "Gets the role type. This operation will retrieve details specific to the role type given in the url.",
        "operationId": "getAuthorizationRoleDefinitionsRoleTypeID",
        "parameters": [
          {
            "$ref": "altinn-api-common.json#/components/parameters/language"
          }
        ],
        "responses": {
          "200": {
            "description": "A RoleDefinition object with the rights embedded.",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefinition-GET-roleTypeId"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["RoleDefinitions"],
        "description": "This method deletes a role definition delegated for given reportee ID (who)",
        "operationId": "deleteAuthorizationRoleDefinitions",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "put": {
        "tags": ["RoleDefinitions"],
        "description": "Attempts to update role type",
        "operationId": "putAuthorizationRoleDefinitions",
        "requestBody": {
          "description": "",
          "content": {
            "application/hal+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDefinition-POST"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Role definition cannot be updated, verify that you have access to the supplied rights"
          }
        }
      },
      "parameters": [
        {
          "$ref": "altinn-api-common.json#/components/parameters/who"
        },
        {
          "$ref": "#/components/parameters/roleTypeID"
        }
      ]
    },
    "/api/{who}/authorization/rights": {
      "get": {
        "tags": ["Rights"],
        "description": "Gets the rights.",
        "operationId": "getAuthorizationRights",
        "parameters": [
          {
            "$ref": "altinn-api-common.json#/components/parameters/language"
          },
          {
            "$ref": "altinn-api-odata.json#/components/parameters/top"
          },
          {
            "$ref": "altinn-api-odata.json#/components/parameters/skip"
          },
          {
            "$ref": "altinn-api-odata.json#/components/parameters/filter"
          },
          {
            "$ref": "altinn-api-odata.json#/components/parameters/orderby"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_links": {
                      "$ref": "altinn-api-common.json#/components/schemas/hal-links-self"
                    },
                    "_embedded": {
                      "type": "object",
                      "properties": {
                        "rights": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Right-GET"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "altinn-api-common.json#/components/parameters/who"
        }
      ]
    },
    "/api/{who}/authorization/rights/{rightID}": {
      "delete": {
        "tags": ["Rights"],
        "description": "Deletes the specified right.",
        "operationId": "deleteAuthorizationRight",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "$ref": "altinn-api-common.json#/components/parameters/who"
        },
        {
          "$ref": "#/components/parameters/rightID"
        }
      ]
    },
    "/api/{who}/authorization/apprights": {
      "get": {
        "tags": ["Rights"],
        "description": "Gets the AltinnPlatform app-rights.",
        "operationId": "getAuthorizationAppRights",
        "parameters": [
          {
            "$ref": "altinn-api-common.json#/components/parameters/language"
          },
          {
            "$ref": "altinn-api-odata.json#/components/parameters/top"
          },
          {
            "$ref": "altinn-api-odata.json#/components/parameters/skip"
          },
          {
            "$ref": "altinn-api-odata.json#/components/parameters/filter"
          },
          {
            "$ref": "altinn-api-odata.json#/components/parameters/orderby"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_links": {
                      "$ref": "altinn-api-common.json#/components/schemas/hal-links-self"
                    },
                    "_embedded": {
                      "type": "object",
                      "properties": {
                        "rights": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/AppRight-GET"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "altinn-api-common.json#/components/parameters/who"
        }
      ]
    },
    "/api/{who}/authorization/apprights/{org}/{app}/{ruleGuid}": {
      "delete": {
        "tags": ["Rights"],
        "description": "Deletes the specified appright.",
        "operationId": "deleteAuthorizationAppRight",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "$ref": "altinn-api-common.json#/components/parameters/who"
        },
        {
          "$ref": "altinn-api-common.json#/components/parameters/org"
        },
        {
          "$ref": "altinn-api-common.json#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/ruleGuid"
        }
      ]
    },
    "/api/{who}/authorization/roles": {
      "get": {
        "tags": ["Roles"],
        "description": "Gets the role list.",
        "operationId": "getAuthorizationRoles",
        "parameters": [
          {
            "$ref": "altinn-api-common.json#/components/parameters/language"
          },
          {
            "$ref": "altinn-api-odata.json#/components/parameters/top"
          },
          {
            "$ref": "altinn-api-odata.json#/components/parameters/skip"
          },
          {
            "$ref": "altinn-api-odata.json#/components/parameters/filter"
          },
          {
            "$ref": "altinn-api-odata.json#/components/parameters/orderby"
          },
          {
            "$ref": "altinn-api-common.json#/components/parameters/who"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_links": {
                      "$ref": "altinn-api-common.json#/components/schemas/hal-links-self"
                    },
                    "_embedded": {
                      "type": "object",
                      "properties": {
                        "roles": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Role-GET"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/{who}/authorization/roles/{roleID}": {
      "delete": {
        "tags": ["Roles"],
        "description": "Deletes the specified role for the user.",
        "operationId": "deleteAuthorizationRoles",
        "parameters": [
          {
            "$ref": "altinn-api-common.json#/components/parameters/who"
          },
          {
            "$ref": "#/components/parameters/roleID"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": []
    },
    "/api/{who}/authorization/Delegations": {
      "get": {
        "tags": ["Delegations"],
        "description": "Gets a list of entities that has been delegated rights and/or roles from the given who",
        "operationId": "getAuthorizationDelegationsByService",
        "parameters": [
          {
            "name": "serviceCode",
            "in": "query",
            "description": "(Optional) ServiceCode to filter the result on. Cannot be used simultaneously as app filter.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "altinnTestService"
            }
          },
          {
            "name": "serviceEditionCode",
            "in": "query",
            "description": "(Optional) ServiceEdition to filter the result on. Cannot be used simultaneously as app filter.",
            "required": false,
            "schema": {
              "type": "int",
              "example": 1
            }
          },
          {
            "name": "app",
            "in": "query",
            "description": "(Optional) Altinn app identifier to filter the result on in the format: {org}/{appName}. Cannot be used simultaneously as filter on service codes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Digdir/BliTjenesteeier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_links": {
                      "$ref": "altinn-api-common.json#/components/schemas/hal-links-self"
                    },
                    "_embedded": {
                      "type": "object",
                      "properties": {
                        "rightholders": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/RightHolder-GET"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Delegations"],
        "description": "Delegate new Right(s), Role(s) and/or Appright(s) to the Right Holder, giving them access to {who}.",
        "operationId": "postAuthorizationDelegations",
        "requestBody": {
          "description": "<p>The RightHolder object must have one way of identifying the receiver of the delegated rights.<br>1. SocialSecurityNumber and LastName<br>2. OrganizationNumber and Name<br>3. UserName and LastName</p><p>A notification will be sent to the Right Holder. If no email is registered, the email field can be used instead.</p><p>Roles, Rights, and Apprights can be omitted if they are empty.</p>",
          "content": {
            "application/hal+json": {
              "schema": {
                "$ref": "#/components/schemas/RightHolder-POST"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": ["Delegations"],
        "description": "<p>Deletes a single role, right, or appright the specified Right Holder has for {who}.</p><p>One of the following parameter combinations is required:<br>1. roleId<br>2. authzRuleId<br>3. org, app, and ruleGuid</p>",
        "operationId": "deleteAuthorizationDelegations",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "Role ID of the role to be deleted.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "authzRuleId",
            "in": "query",
            "description": "Right ID of the right to be deleted.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 4371450
            }
          },
          {
            "name": "org",
            "in": "query",
            "description": "The organization",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Digdir"
            }
          },
          {
            "name": "app",
            "in": "query",
            "description": "The name of the app",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BliTjenesteeier"
            }
          },
          {
            "name": "ruleGuid",
            "in": "query",
            "description": "Guid identifying the rule",
            "required": false,
            "schema": {
              "type": "string",
              "example": "6edc0479-b763-4451-bdd4-6c839c695e90"
            }
          },
          {
            "name": "receiverId",
            "in": "path",
            "description": "The ReporteeID or UserID of the party or user the delegations are given to.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Reportee ID": {
                "value": "r5123456"
              },
              "User ID": {
                "value": "u6234567"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "$ref": "altinn-api-common.json#/components/parameters/who"
        }
      ]
    },
    "/api/{who}/authorization/Delegations/{receiverID}": {
      "get": {
        "tags": ["Delegations"],
        "description": "Gets a right holder by its id. Will include all rights and roles delegated to the right holder",
        "operationId": "getAuthorizationDelegations",
        "parameters": [
          {
            "$ref": "altinn-api-common.json#/components/parameters/language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/RightHolder-GET-receiverID"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "altinn-api-common.json#/components/parameters/who"
        },
        {
          "$ref": "#/components/parameters/receiverID"
        }
      ]
    },
    "/api/{who}/authorization/Delegations/{receiverID}/apprights": {
      "get": {
        "tags": ["Delegations"],
        "description": "Gets all apprights for a given right holder",
        "operationId": "getAuthorizationDelegationsApprights",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_links": {
                      "$ref": "altinn-api-common.json#/components/schemas/hal-links-self"
                    },
                    "_embedded": {
                      "type": "object",
                      "properties": {
                        "apprights": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/RightHolder-GET"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "altinn-api-common.json#/components/parameters/who"
        },
        {
          "$ref": "#/components/parameters/receiverID"
        }
      ]
    },
    "/api/{who}/authorization/Delegations/{receiverID}/apprights/{org}/{app}/{ruleGuid}": {
      "delete": {
        "tags": ["Delegations"],
        "description": "This method deletes an appright delegated by the given reportee ID (who)",
        "operationId": "deleteAuthorizationDelegationsApprights",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "$ref": "altinn-api-common.json#/components/parameters/who"
        },
        {
          "$ref": "#/components/parameters/receiverID"
        },
        {
          "$ref": "altinn-api-common.json#/components/parameters/org"
        },
        {
          "$ref": "altinn-api-common.json#/components/parameters/app"
        },
        {
          "$ref": "#/components/parameters/ruleGuid"
        }
      ]
    },
    "/api/{who}/authorization/Delegations/{receiverID}/rights": {
      "get": {
        "tags": ["Delegations"],
        "description": "Gets all rights for a given right holder",
        "operationId": "getAuthorizationDelegationsRights",
        "parameters": [
          {
            "$ref": "altinn-api-common.json#/components/parameters/language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_links": {
                      "$ref": "altinn-api-common.json#/components/schemas/hal-links-self"
                    },
                    "_embedded": {
                      "type": "object",
                      "properties": {
                        "rights": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Right-GET"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "altinn-api-common.json#/components/parameters/who"
        },
        {
          "$ref": "#/components/parameters/receiverID"
        }
      ]
    },
    "/api/{who}/authorization/Delegations/{receiverID}/rights/{rightID}": {
      "delete": {
        "tags": ["Delegations"],
        "description": "This method deletes a right delegated by the given reportee ID (who)",
        "operationId": "deleteAuthorizationDelegationsRights",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "parameters": [
        {
          "$ref": "altinn-api-common.json#/components/parameters/who"
        },
        {
          "$ref": "#/components/parameters/receiverID"
        },
        {
          "$ref": "#/components/parameters/rightID"
        }
      ]
    },
    "/api/{who}/authorization/Delegations/{receiverID}/roles": {
      "get": {
        "tags": ["Delegations"],
        "description": "Gets all roles for a given right holder",
        "operationId": "getAuthorizationDelegationsRoles",
        "parameters": [
          {
            "$ref": "altinn-api-common.json#/components/parameters/language"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          },
          "403": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "$ref": "altinn-api-common.json#/components/parameters/who"
        },
        {
          "$ref": "#/components/parameters/receiverID"
        }
      ]
    },
    "/api/{who}/authorization/Delegations/{receiverID}/roles/{roleID}": {
      "delete": {
        "tags": ["Delegations"],
        "description": "This method deletes a role (Single) delegated by the given reportee ID (who)",
        "operationId": "deleteAuthorizationDelegationsRoles",
        "parameters": [],
        "responses": {
          "204": {
            "description": "No content"
          },
          "403": {
            "description": "The role cannot be deleted."
          }
        }
      },
      "parameters": [
        {
          "$ref": "altinn-api-common.json#/components/parameters/who"
        },
        {
          "$ref": "#/components/parameters/receiverID"
        },
        {
          "$ref": "#/components/parameters/roleID"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "RoleName": {
        "description": "Role name",
        "type": "string",
        "example": "AltinnTest"
      },
      "RoleDescription": {
        "description": "Role Description",
        "type": "string",
        "example": "Local role for Altinn Test service."
      },
      "RoleType": {
        "description": "Role Type",
        "type": "enum",
        "enum": ["Altinn", "External", "Local"],
        "example": "Local"
      },
      "RoleDefinitionId": {
        "description": "Unique id of the role definition",
        "type": "integer",
        "example": 42
      },
      "RoleDefinitionCode": {
        "description": "Serializable alphanumeric code for this role definition. Only used for Altinn and External role types.",
        "type": "string",
        "example": "REGN"
      },
      "RoleDefinition-POST": {
        "description": "Role Definitions description",
        "required": ["RoleName", "RoleDescription", "RoleType", "embedded"],
        "type": "object",
        "properties": {
          "RoleName": {
            "$ref": "#/components/schemas/RoleName"
          },
          "RoleDescription": {
            "$ref": "#/components/schemas/RoleDescription"
          },
          "RoleType": {
            "$ref": "#/components/schemas/RoleType"
          },
          "_embedded": {
            "type": "object",
            "properties": {
              "Rights": {
                "description": "List of Rights",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Right-POST"
                }
              }
            }
          }
        }
      },
      "RoleDefinition-GET": {
        "description": "Role Definitions description",
        "required": [
          "RoleType",
          "RoleDefinitionId",
          "RoleName",
          "RoleDescription",
          "RoleDefinitionCode",
          "_links"
        ],
        "type": "object",
        "properties": {
          "RoleType": {
            "$ref": "#/components/schemas/RoleType"
          },
          "RoleDefinitionId": {
            "$ref": "#/components/schemas/RoleDefinitionId"
          },
          "RoleName": {
            "$ref": "#/components/schemas/RoleName"
          },
          "RoleDescription": {
            "$ref": "#/components/schemas/RoleDescription"
          },
          "RoleDefinitionCode": {
            "$ref": "#/components/schemas/RoleDefinitionCode"
          },
          "_links": {
            "$ref": "altinn-api-common.json#/components/schemas/hal-links-self"
          }
        }
      },
      "RoleDefinition-GET-roleTypeId": {
        "description": "Role Definitions description",
        "required": [
          "RoleType",
          "RoleDefinitionId",
          "RoleName",
          "RoleDescription",
          "RoleDefinitionCode",
          "Rights",
          "_links"
        ],
        "type": "object",
        "properties": {
          "RoleType": {
            "$ref": "#/components/schemas/RoleType"
          },
          "RoleDefinitionId": {
            "$ref": "#/components/schemas/RoleDefinitionId"
          },
          "RoleName": {
            "$ref": "#/components/schemas/RoleName"
          },
          "RoleDescription": {
            "$ref": "#/components/schemas/RoleDescription"
          },
          "RoleDefinitionCode": {
            "$ref": "#/components/schemas/RoleDefinitionCode"
          },
          "Rights": {
            "type": "object",
            "properties": {
              "_links": {
                "$ref": "altinn-api-common.json#/components/schemas/hal-links-self"
              },
              "_embedded": {
                "type": "object",
                "properties": {
                  "rights": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Right-GET"
                    }
                  }
                }
              }
            }
          },
          "_links": {
            "$ref": "altinn-api-common.json#/components/schemas/hal-links-self"
          }
        }
      },
      "Role-POST": {
        "description": "Role description",
        "required": ["RoleDefinitionId"],
        "type": "object",
        "properties": {
          "RoleDefinitionId": {
            "$ref": "#/components/schemas/RoleDefinitionId"
          }
        }
      },
      "Role-GET": {
        "description": "Role description",
        "type": "object",
        "properties": {
          "RoleId": {
            "description": "Unique id of the role.",
            "type": "integer",
            "example": 2005104
          },
          "RoleType": {
            "$ref": "#/components/schemas/RoleType"
          },
          "RoleDefinitionId": {
            "$ref": "#/components/schemas/RoleDefinitionId"
          },
          "RoleName": {
            "$ref": "#/components/schemas/RoleName"
          },
          "RoleDescription": {
            "$ref": "#/components/schemas/RoleDescription"
          },
          "Delegator": {
            "description": "Specifies who has delegated this role.",
            "type": "string",
            "example": "TOM HEIS"
          },
          "DelegatedTime": {
            "description": "The date and time when the role was delegated.",
            "type": "string",
            "formate": "date-time",
            "example": "2021-12-01T13:53:43.713"
          },
          "RoleDefinitionCode": {
            "$ref": "#/components/schemas/RoleDefinitionCode"
          },
          "_links": {
            "type": "object",
            "properties": {
              "roledefinition": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "ServiceCode": {
        "description": "Service Code",
        "type": "string",
        "example": "altinnTestService"
      },
      "ServiceEditionCode": {
        "description": "Service Edition Code",
        "type": "integer",
        "example": 1
      },
      "Action": {
        "description": "Action",
        "type": "enum",
        "enum": ["Read", "Write", "Archive-Read", "Archive-Delete", "Sign"],
        "example": "Read"
      },
      "RightSourceType": {
        "description": "Specifies the way the right is given.",
        "type": "enum",
        "enum": [
          "DirectlyDelegated",
          "InheritedViaKeyRole",
          "InheritedAsSubunit",
          "InheritedAsSubunitViaKeyRole",
          "RoleTypeRights"
        ],
        "example": "RoleTypeRights"
      },
      "Right-POST": {
        "description": "Right description",
        "required": ["ServiceCode", "ServiceEditionCode", "Action"],
        "type": "object",
        "properties": {
          "ServiceCode": {
            "$ref": "altinn-api-common.json#/components/schemas/ServiceCode"
          },
          "ServiceEditionCode": {
            "$ref": "altinn-api-common.json#/components/schemas/ServiceEditionCode"
          },
          "Action": {
            "$ref": "altinn-api-common.json#/components/schemas/Action"
          }
        }
      },
      "Right-GET": {
        "description": "Right description",
        "type": "object",
        "properties": {
          "RightID": {
            "description": "Right ID",
            "type": "integer",
            "example": "2098298"
          },
          "RightType": {
            "description": "The type of service or resource this right controls.",
            "type": "enum",
            "enum": ["Service"],
            "example": "Service"
          },
          "ServiceCode": {
            "$ref": "altinn-api-common.json#/components/schemas/ServiceCode"
          },
          "ServiceEditionCode": {
            "$ref": "altinn-api-common.json#/components/schemas/ServiceEditionCode"
          },
          "Action": {
            "$ref": "altinn-api-common.json#/components/schemas/Action"
          },
          "RightSourceType": {
            "$ref": "#/components/schemas/RightSourceType"
          },
          "IsDelegatable": {
            "description": "Can this right be delegated to others?",
            "type": "boolean",
            "example": true
          }
        }
      },
      "RuleGuid": {
        "description": "Unique id of the specific right",
        "type": "string",
        "example": "6edc0479-b763-4451-bdd4-6c839c695e90"
      },
      "AppRight-POST": {
        "description": "AppRight description",
        "required": ["RuleGuid"],
        "type": "object",
        "properties": {
          "RuleGuid": {
            "$ref": "#/components/schemas/RuleGuid"
          }
        }
      },
      "AppRight-GET": {
        "description": "",
        "type": "object",
        "properties": {
          "RuleGuid": {
            "$ref": "#/components/schemas/RuleGuid"
          },
          "AltinnAppId": {
            "description": "Specifies the appid on format org/app and reflects to the app definition where org is the owner of the app and app is the name of the app.",
            "type": "string",
            "example": "Digdir/BliTjenesteeier"
          },
          "ResourceId": {
            "description": "Id of the system resource. This will be Task or Event and possible more values in the future",
            "type": "enum",
            "enum": ["Task", "Event"],
            "example": "Event"
          },
          "ResourceValue": {
            "description": "The name of the resource",
            "type": "string"
          },
          "Action": {
            "description": "Action supported by the right. Possible values are anything defined as Action on the app but Read, Write is common values.",
            "type": "string",
            "example": "Read"
          },
          "RightSourceType": {
            "$ref": "#/components/schemas/RightSourceType"
          },
          "IsDelegatable": {
            "description": "Can this right be delegated to others?",
            "type": "boolean"
          }
        }
      },
      "RightHolder-POST": {
        "description": "",
        "required": [],
        "type": "object",
        "properties": {
          "OrganizationNumber": {
            "description": "The organization number of the reportee. This is required input when delegating rights to an organization.",
            "type": "string",
            "example": "912345678"
          },
          "Name": {
            "description": "The name of the right holder. Person name, name of organization or username of an enterprise user.",
            "type": "string",
            "example": "TOM HEIS"
          },
          "SocialSecurityNumber": {
            "description": "The social security number of the reportee if a person. This is in most cases hidden. Can be used in place of username when delegating rights to a person.",
            "type": "string",
            "example": "01234567890"
          },
          "LastName": {
            "description": "The surname of the reportee. Visible only for persons. Required input when performing delegation.",
            "type": "string",
            "example": "HEIS"
          },
          "UserName": {
            "description": "The username of an enterprise user or person with a username. Not visible in output, but required input when delegating a right to an enterprise user.",
            "type": "string",
            "example": "Brukernavn01"
          },
          "Email": {
            "description": "Required input when performing delegation. The value is used to notify the entity receiving the new rights.",
            "type": "string",
            "example": "tom.heis@digdir.no"
          },
          "_embedded": {
            "type": "object",
            "properties": {
              "Roles": {
                "description": "List of Roles",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Role-POST"
                }
              },
              "Rights": {
                "description": "List of Rights",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Right-POST"
                }
              },
              "Apprights": {
                "description": "List of App-rights",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AppRight-POST"
                }
              }
            }
          }
        }
      },
      "RightHolder-GET": {
        "description": "",
        "type": "object",
        "properties": {
          "RightHolderId": {
            "description": "The ID of the user holding the rights. The value is globally unique in Altinn and represents a person, organization or enterprise user. Organizations and persons are prefixed with 'r'. Enterprise Users have a prefix of 'u'",
            "type": "string",
            "example": "r50008000"
          },
          "OrganizationNumber": {
            "description": "The organization number of the reportee. This is only shown if the right holder is an organization.",
            "type": "string",
            "example": "912345678"
          },
          "Name": {
            "description": "The name of the right holder. Person name, name of organization or username of an enterprise user.",
            "type": "string",
            "example": "TOM HEIS"
          },
          "SocialSecurityNumber": {
            "description": "The social security number of the reportee if a person. The last 5 numbers of this field is masked.",
            "type": "string",
            "example": "012345*****"
          },
          "LastName": {
            "description": "The surname of the reportee. Visible only for persons.",
            "type": "string",
            "example": "HEIS"
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "https://tt02.altinn.no/api/my/authorization/delegations/r50008000"
                  }
                }
              },
              "rights": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "https://tt02.altinn.no/api/my/authorization/delegations/r50008000/rights"
                  }
                }
              },
              "apprights": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "https://tt02.altinn.no/api/my/authorization/delegations/r50008000/apprights"
                  }
                }
              },
              "roles": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "https://tt02.altinn.no/api/my/authorization/delegations/r50008000/roles"
                  }
                }
              }
            }
          }
        }
      },
      "RightHolder-GET-receiverID": {
        "description": "",
        "type": "object",
        "properties": {
          "RightHolderId": {
            "description": "The ID of the user holding the rights. The value is globally unique in Altinn and represents a person, organization or enterprise user. Organizations and persons are prefixed with 'r'. Enterprise Users have a prefix of 'u'",
            "type": "string",
            "example": "r50008000"
          },
          "OrganizationNumber": {
            "description": "The organization number of the reportee. This is only shown if the right holder is an organization.",
            "type": "string",
            "example": "912345678"
          },
          "Name": {
            "description": "The name of the right holder. Person name, name of organization or username of an enterprise user.",
            "type": "string",
            "example": "TOM HEIS"
          },
          "SocialSecurityNumber": {
            "description": "The social security number of the reportee if a person. The last 5 numbers of this field is masked.",
            "type": "string",
            "example": "012345*****"
          },
          "LastName": {
            "description": "The surname of the reportee. Visible only for persons.",
            "type": "string",
            "example": "HEIS"
          },
          "Roles": {
            "type": "object",
            "properties": {
              "_links": {
                "$ref": "altinn-api-common.json#/components/schemas/hal-links-self"
              },
              "_embedded": {
                "type": "object",
                "properties": {
                  "roles": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Role-GET"
                    }
                  }
                }
              }
            }
          },
          "Rights": {
            "type": "object",
            "properties": {
              "_links": {
                "$ref": "altinn-api-common.json#/components/schemas/hal-links-self"
              },
              "_embedded": {
                "type": "object",
                "properties": {
                  "rights": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Right-GET"
                    }
                  }
                }
              }
            }
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "https://tt02.altinn.no/api/my/authorization/delegations/r50008000"
                  }
                }
              },
              "rights": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "https://tt02.altinn.no/api/my/authorization/delegations/r50008000/rights"
                  }
                }
              },
              "apprights": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "https://tt02.altinn.no/api/my/authorization/delegations/r50008000/apprights"
                  }
                }
              },
              "roles": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "https://tt02.altinn.no/api/my/authorization/delegations/r50008000/roles"
                  }
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "description": "",
      "content": {
        "application/json": {}
      }
    },
    "parameters": {
      "roleTypeID": {
        "name": "roleTypeID",
        "in": "path",
        "description": "Role Type ID.",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "rightID": {
        "name": "rightID",
        "in": "path",
        "description": "Right ID of the right to be deleted.",
        "required": true,
        "schema": {
          "type": "integer",
          "example": 4371450
        }
      },
      "ruleGuid": {
        "name": "ruleGuid",
        "in": "path",
        "description": "Guid identifying the rule",
        "required": true,
        "schema": {
          "type": "string",
          "example": "6edc0479-b763-4451-bdd4-6c839c695e90"
        }
      },
      "roleID": {
        "name": "roleID",
        "in": "path",
        "description": "Role ID of the role to be deleted.",
        "required": true,
        "schema": {
          "type": "integer",
          "example": 1
        }
      },
      "receiverID": {
        "name": "receiverID",
        "in": "path",
        "description": "The ReporteeID or UserID of the party or user the delegations are given to.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "examples": {
          "Reportee ID": {
            "value": "r5123456"
          },
          "User ID": {
            "value": "u6234567"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "name": "ApiKey",
        "in": "header"
      },
      "ID-porten-ver2": {
        "type": "oauth2",
        "description": "The VER2 test environment for ID-porten authentication.",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://oidc-ver2.difi.no/idporten-oidc-provider/authorize",
            "tokenUrl": "https://oidc-ver2.difi.no/idporten-oidc-provider/token",
            "scopes": {
              "altinn:enduser": "All operations for all end-user resources.",
              "altinn:roledefinitions.read": "GET operations for Role Definitions.",
              "altinn:roledefinitions.write": "POST, PUT, and DELETE operations for Role Definitions.",
              "altinn:consentrequests.read": "GET operations for Consent Requests.",
              "altinn:consentrequests.write": "POST and DELETE operations for Consent Requests.",
              "altinn:delegationrequests.read": "GET operations for Delegation Requests.",
              "altinn:delegationrequests.write": "POST and DELETE operations for Delegation Requests.",
              "altinn:delegations.read": "GET operations for Delegations.",
              "altinn:delegations.write": "POST and DELETE operations for Delegations.",
              "altinn:rolesandrights.read": "GET operations for Roles and Rights",
              "altinn:rolesandrights.write": "DELETE operations for Roles and Rights"
            }
          }
        }
      },
      "ASPXAUTH-cookie": {
        "type": "apiKey",
        "name": ".ASPXAUTH",
        "in": "header"
      }
    }
  },
  "security": [{}],
  "tags": [
    {
      "name": "RoleDefinitions",
      "description": "Contains all actions related to the role type"
    },
    {
      "name": "Rights",
      "description": "Contains all actions related to authorization rights"
    },
    {
      "name": "Roles",
      "description": "Contains all actions related to authorization roles"
    },
    {
      "name": "Delegations",
      "description": "Collection of actions that provides data about legal entities the user can represent. Reportee is a term used to describe a legal entity that the user can represent and act on behalf of. The actions provide data about the persons and organizations the user can represent."
    }
  ]
}
